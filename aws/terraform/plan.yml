parameters:
- name: awsServiceConnectionName
  displayName: Service connection name
  type: string
- name: awsBucketName
  displayName: Bucket Name
  type: string
- name: initAdditionalCommandOptions
  displayName: Additional command options for init step
  type: string
  default: " "
- name: planFile
  displayName: Name of the plan file
  type: string
- name: planAdditionalCommandOptions
  displayName: Additional command options for plan step
  type: string
  default: " "
- name: terraformVersion
  displayName: Terraform version
  type: string
  default: '0.14.9'
- name: workingDirectory
  displayName: Working directory
  type: string
- name: workspaceName
  displayName: Workspace name
  type: string

steps:
- task: TerraformInstaller@0
  displayName: Install Terraform version:${{ parameters.terraformVersion }}
  inputs:
    terraformVersion: ${{ parameters.terraformVersion }}
- task: TerraformTaskV1@0
  displayName: Terraform Init
  inputs:
    provider: 'aws'
    command: 'init'
    commandOptions: '-input=false -lock=true ${{ parameters.initAdditionalCommandOptions }}'
    backendServiceAWS: ${{ parameters.awsServiceConnectionName }}
    backendAWSBucketName: ${{ parameters.awsBucketName }}
    backendAWSKey: terraform.tfstate
    workingDirectory: ${{ parameters.workingDirectory }}

- script: |
    lowerWorkspaceName='${{ lower(parameters.workspaceName) }}'
    terraform workspace new $lowerWorkspaceName || terraform workspace select $lowerWorkspaceName
  displayName: Terraform Select Workspace
  workingDirectory: ${{ parameters.workingDirectory }}

- task: TerraformTaskV1@0
  displayName: Terraform Plan
  inputs:
    provider: 'aws'
    command: 'plan'
    commandOptions: '-out=${{ parameters.planFile }} ${{ parameters.planAdditionalCommandOptions }}'
    environmentServiceNameAWS: ${{ parameters.awsServiceConnectionName }}
    workingDirectory: ${{ parameters.workingDirectory }}
