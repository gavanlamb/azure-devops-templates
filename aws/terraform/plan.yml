parameters:
  - name: artifactName
    displayName: Name of the artifact produced and published
    type: string
  - name: initAdditionalCommandOptions
    displayName: Additional command options for Terraform init
    type: string
    default: " "
  - name: planAdditionalCommandOptions
    displayName: Additional command options for the Terraform plan step
    type: string
    default: " "
  - name: serviceConnectionName
    displayName: Service connection name, used for init & plan
    type: string
  - name: stateBucketName
    displayName: Name of the S3 bucket that Terraform uses to store state
    type: string
  - name: stateLockTableName
    displayName: Name of the DynamoDB table used by Terraform to lock state
    type: string
  - name: version
    displayName: Terraform version
    type: string
    default: 1.0.2
  - name: workingDirectory
    displayName: Directory where the terraform files are stored
    type: string
    default: $(Build.SourcesDirectory)/infrastructure
  - name: workspaceName
    displayName: Terraform workspace name
    type: string
  - name: stateFilename
    displayName: Terraform workspace name
    type: string
    default: terraform.tfstate

steps:
  - task: TerraformInstaller@0
    displayName: Install version:${{ parameters.version }}
    inputs:
      terraformVersion: ${{ parameters.version }}

  - task: TerraformTaskV1@0
    displayName: Init
    inputs:
      provider: aws
      command: init
      commandOptions: '-no-color -input=false -backend-config="dynamodb_table=${{ parameters.stateLockTableName }}" ${{ parameters.initAdditionalCommandOptions }}'
      backendServiceAWS: ${{ parameters.serviceConnectionName }}
      backendAWSKey: ${{ parameters.stateFilename }}
      backendAWSBucketName: ${{ parameters.stateBucketName }}
      workingDirectory: ${{ parameters.workingDirectory }}

  - task: PowerShell@2
    displayName: Select workspace
    inputs:
      targetType: 'inline'
      script: |
        $lowerWorkspaceName='${{ lower(parameters.workspaceName) }}'
        terraform workspace new $lowerWorkspaceName || terraform workspace select $lowerWorkspaceName
      errorActionPreference: 'continue'
      showWarnings: true
      pwsh: true
      workingDirectory: '${{ parameters.workingDirectory }}'

  - task: TerraformTaskV1@0
    displayName: Plan
    inputs:
      provider: aws
      command: plan
      commandOptions: '-no-color -out=plan.tfplan ${{ parameters.planAdditionalCommandOptions }}'
      environmentServiceNameAWS: ${{ parameters.serviceConnectionName }}
      workingDirectory: ${{ parameters.workingDirectory }}

  - task: ArchiveFiles@2
    displayName: Archive
    inputs:
      rootFolderOrFile: ${{ parameters.workingDirectory }}
      includeRootFolder: false
      archiveType: tar
      tarCompression: gz
      archiveFile: ${{ parameters.workingDirectory }}/terraform.tar.gz
      replaceExistingArchive: true

  - task: PublishBuildArtifacts@1
    displayName: Publish
    inputs:
      PathtoPublish: ${{ parameters.workingDirectory }}/terraform.tar.gz
      ArtifactName: ${{ parameters.artifactName }}
      publishLocation: Container
